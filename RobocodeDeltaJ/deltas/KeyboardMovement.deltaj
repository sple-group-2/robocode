delta KeyboardMovement{

    modifies jab.module.Movement {
    	adds import java.awt.event.InputEvent;
    	adds import java.awt.event.KeyEvent;
    	
    	adds int moveDirection;  
	    adds int turnDirection;
	    adds double moveAmount;

        modifies move() {
      
	        
            // Sets the robot to move forward, backward, or stop moving
            bot.setAhead(moveAmount * moveDirection);

            // Decrement the move amount to prevent infinite movement
            moveAmount = Math.max(0, moveAmount - 1);

            // Sets the robot to turn right or left at max speed
            bot.setTurnRight(45 * turnDirection);
        }

        adds public void listenInput(InputEvent e) {
            if (e instanceof KeyEvent) {
                if (((KeyEvent) e).getID() == KeyEvent.KEY_PRESSED) {
                    switch (((KeyEvent) e).getKeyCode()) {
                        case KeyEvent.VK_UP:
                            moveDirection = 1;
                            moveAmount = Double.POSITIVE_INFINITY;
                            break;
                        case KeyEvent.VK_DOWN:
                            moveDirection = -1;
                            moveAmount = Double.POSITIVE_INFINITY;
                            break;
                        case KeyEvent.VK_RIGHT:
                            turnDirection = 1;
                            break;
                        case KeyEvent.VK_LEFT:
                            turnDirection = -1;
                            break;
                    }
                }
            else if (((KeyEvent) e).getID() == KeyEvent.KEY_RELEASED) {
                    switch (((KeyEvent) e).getKeyCode()) {
                        case KeyEvent.VK_UP:
                        case KeyEvent.VK_DOWN:
                            moveDirection = 0;
                            break;
                        case KeyEvent.VK_RIGHT:
                        case KeyEvent.VK_LEFT:
                            turnDirection = 0;
                            break;
                    }
                }
            }
        }
    }
}
